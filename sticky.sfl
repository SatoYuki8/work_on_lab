circuit sticky_module{
    input frac<13>;  
    input exp<5>;  
    output result;
    instrin do;

    instrself s1, s2, s4, s8, s16;
    instrself n1, n2, n4, n8, n16;

    sel_v o1<13>, o2<13>, o4<13>, o8<13>;
    sel_v tmp0, tmp1, tmp2, tmp3;

    instruct do par {
	alt {exp<4>: s16(); else: n16();}
	alt {exp<3>: s8(); else: n8();}
	alt {exp<2>: s4(); else: n4();}
	alt {exp<1>: s2(); else: n2();}
	alt {exp<0>: s1(); else: n1();}
    }
    
    instruct n1 par{
	o1 = frac;
	tmp0 = 0b0;
    }
    instruct n2 par{
	o2 = o1;
	tmp1 = 0b0;
    }
    instruct n4 par{
	o4 = o2;
	tmp2 = 0b0;
    }
    instruct n8 par{
	o8 = o4;
	tmp3 = 0b0;
    }
    instruct n16 result = tmp0 | tmp1| tmp2 |tmp3;

    instruct s1 par{
	o1 = frac >> 0b1;
	tmp0 = 0b0;
    }
    instruct s2 par{
        o2 = o1 >> 0b10;
	tmp1 = /|o1<1:0>;
    }
    instruct s4 par{
	o4 = o2 >> 0b100;
	tmp2 = /|o2<3:0>;
    }
    instruct s8 par{
	o8 = o4 >> 0b1000;
	tmp3 = /|o4<7:0>;
    }
    instruct s16 result = /|frac;

}

/*
circuit sticky{
    input frac<13>;  
    input exp<5>;  
    output result;
    instrin do;

    instrself s0, s2, s3, s4, s8, s16;

    instruct do par {
	alt {exp<4>: s16();
	     exp<3>: s8();
	     exp<2>: s4();
	     exp<1>: par{
		 alt{
		     exp<0>: s3();
		     else: s2();
		 }
	     }
	     else: s0();
	 }
    }
    
    instruct s0 result = 0b0;
    instruct s2 result = 0b0;
    instruct s3 result = /|frac<2:0>;
    instruct s4 result = /|frac<3:0>;
    instruct s8 result = /|frac<7:0>;
    instruct s16 result = /|frac;
}
*/
